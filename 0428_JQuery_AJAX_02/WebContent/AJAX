Ajax(Asynhronous Javascript And XML) : 자바스크립트와 XML 비동기 통신
- 서버와 클라이언트 간의 속도를 맞출 필요가 없다. 클라이언트가 서버에게 요청하고 응답할 때까지 기다리지 않아도 된다.
- 페이지 단위의 로드가 아니라, XML 파일 조각 단위의 로드. 즉 전체 페이지를 다시 로드하지 않괴, 화면 전환 없이 결과를 표시할 수 있다.

1.	jQuery.load(url,data,callback)			※ 콜백함수 : 매개변수가 함수인 경우
	: ajax 기능으로 html 로드하고 DOM방식으로 삽입
	- url : 서버 측 위치
	- data : 가져올 데이터
	- callback : 콜백함수

2.	jQuery.get(url,data,callback,type) : get방식으로 원격 페이지 로드
	jQuery.post(url,data,callback,type) : post방식으로 원격 페이지 로드
 
3.	jQuery.getJSON() : get방식으로 JSON데이터 로드
	jQuery.getScript() : get방식으로 script데이터 로드

4.	serialize() : form요소에 전송할 데이터를 직렬화
		=> 'name1=value&name2=value'
	serializeArray() :
		=> key1:value, key2:value, key3:value,...(JSON 데이터로 전환)

5.	ajaxComplete(function(){}) : ajax통신이 완료(성공)되면 함수 실행

6.	jQuery.ajax(url,type,data,datatype)
	- url : 서버 위치(jsp)
	- data : 서버에 전송되는 데이터
	- datatype : 응답 결과의 데이터 형태(xml,html,json,text,script,...)
	- success : 성공한 경우
	- error : 실패한 경우 (성공한 경우와 실패한 경우의 수행을 다르게 할 수 있다)
	- complete : 요청이 완료되었을 때
	- contentType : 서버 전송시 문서 타입

////////////////////////////////////////

웹상에서 정보를 전달하는 방법 : xml, json을 가장 많이 사용한다.
xml : 사용자가 태그를 직접 만들어서 사용하는 것
	ex) http://www.kma.go.kr/XML/weather/sfc_web_map.xml

json : key와 value 매칭(1:1) => http://json.org
	ex) http://openapi.seoul.go.kr:8088/sample/json/SeoulLibraryTime/1/5/
	- json형식 : [{"키":"값","키":"값"}], [{"키":["값1","값2","값3"]}]
	